@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<link href="~/css/rawmaterial/rawmaterialpage.css" rel="stylesheet" />
<script src="~/js/rawmaterialpage/rawmaterialpage.js"></script>

<div class="row mt-4 mb-3">
  <div class="col-6">
    <h1>Hammadeler</h1>
  </div>
  
</div>

<div class="container mt-5">
  <div class="col-12 d-flex justify-content-end">
    <button id="addRow" class="btn mb-3"><i class="bi bi-plus-square"></i></button>
  </div>
  <table id="productTable" class="table table-striped table-bordered">
    <thead>
      <tr>
        <th>Hammade Adı</th>
        <th>Birim</th>
        <th>Fiyat</th>
        <th>Güncelleme Tarihi</th>
        <th>İşlem</th>
        <th class="d-none">Tablo ID</th>
      </tr>
    </thead>
    <tbody>
      <!-- Satırlar buraya eklenecek -->
    </tbody>
  </table>
</div>


@* <script>
  $(document).ready(function () {
    var table = $('#productTable').DataTable();

    // Satır ekleme işlemi
    $('#addRow').on('click', function () {
      var newRow = table.row.add([
        '<input type="text" class="form-control product-name" placeholder="Hammade Adı">',
        '<select class="form-control product-unit">' +
            '<option value="Kg">Kg</option>' +
            '<option value="L">L</option>' +
            '<option value="Gr">Gr</option>' +
            '<option value="Mg">Mg</option>' +
        '</select>',
        '<input type="number" class="form-control product-price" placeholder="Fiyat">',
        '<button class="btn btn-primary save-btn">Kaydet</button>',
        '<button class="btn btn-danger delete-btn">Sil</button>'
      ]).draw().node();

      // Kaydet butonuna tıklama
      $(newRow).find('.save-btn').on('click', function () {
        var productName = $(newRow).find('.product-name').val();
        var productPrice = $(newRow).find('.product-price').val();

        if (productName && productPrice) {
          // Verileri kaydetmek için AJAX isteği gönder
          $.ajax({
            url: '/api/Products/AddProduct',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
              name: productName,
              price: productPrice
            }),
            success: function (response) {
              alert(response.message);

              // Kaydet butonunu güncelleme butonuna çevir
              table.cell(newRow, 0).data(productName).draw();
              var productUnit = $(newRow).find('.product-unit').val();
              table.cell(newRow, 1).data(productPrice).draw();
              $(newRow).find('.save-btn').replaceWith('<button class="btn btn-warning update-btn">Güncelle</button>');
              $(newRow).find('.delete-btn').replaceWith('<button class="btn btn-danger delete-btn">Sil</button>');
            },
            error: function () {
              alert('Bir hata oluştu. Lütfen tekrar deneyin.');
            }
          });
        } else {
          alert('Lütfen tüm alanları doldurun.');
        }
      });

      // Silme butonuna tıklama
      $(newRow).find('.delete-btn').on('click', function () {
        // Satırı tablodan kaldır
        table.row(newRow).remove().draw();

        // Silme işlemi için AJAX isteği gönder
        // Silme işlemi için productId'yi almak gerekiyor,
        // bu yüzden productId'yi satırda bir data attribute olarak tutmamız lazım
        var productId = $(newRow).data('id');  // Burada ürün ID'sini alıyoruz

        $.ajax({
          url: '/api/Products/DeleteProduct/' + productId,
          method: 'DELETE',
          success: function (response) {
            alert(response.message);
          },
          error: function () {
            alert('Bir hata oluştu. Lütfen tekrar deneyin.');
          }
        });
      });
    });

    // Güncelleme butonuna tıklama
    $('#productTable').on('click', '.update-btn', function () {
      var row = $(this).closest('tr');
      var productName = row.find('td').eq(0).text();
      var productPrice = row.find('td').eq(1).text();

      // Satırdaki verileri input alanlarına yükle
      row.find('td').eq(0).html('<input type="text" class="form-control product-name" value="' + productName + '">');
      row.find('td').eq(1).html('<input type="number" class="form-control product-price" value="' + productPrice + '">');

      // Güncelleme butonunu kaydet butonuna çevir
      $(this).replaceWith('<button class="btn btn-primary save-btn">Kaydet</button>');

      // Kaydet butonuna tıklama
      row.find('.save-btn').on('click', function () {
        var updatedProductName = row.find('.product-name').val();
        var updatedProductPrice = row.find('.product-price').val();

        if (updatedProductName && updatedProductPrice) {
          // Verileri güncellemek için AJAX isteği gönder
          var productId = row.data('id'); // Satırın ID'sini al

          $.ajax({
            url: '/api/Products/UpdateProduct/' + productId,
            method: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({
              name: updatedProductName,
              price: updatedProductPrice
            }),
            success: function (response) {
              alert(response.message);

              // Güncellenmiş verileri tabloya kaydet
              table.cell(row, 0).data(updatedProductName).draw();
              table.cell(row, 1).data(updatedProductPrice).draw();

              // Kaydet butonunu güncelleme butonuna çevir
              row.find('.save-btn').replaceWith('<button class="btn btn-warning update-btn">Güncelle</button>');
            },
            error: function () {
              alert('Bir hata oluştu. Lütfen tekrar deneyin.');
            }
          });
        } else {
          alert('Lütfen tüm alanları doldurun.');
        }
      });
    });
  });
</script> *@

